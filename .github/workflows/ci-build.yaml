name: Continuous Integration

on:
  workflow_run:
    workflows:
      - "Auto-Merge main to special branches"
    types:
      - completed
  push:
    branches:
      - release
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - '/README.md'
jobs:
  ci-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ['products', 'payments']

    steps:
    - name: Download auto-merge-commit artifact (if required)
      uses: dawidd6/action-download-artifact@v2
      if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
      with:
        name: auto-merge-commit
        run_id: ${{ github.event.workflow_run.id }}
        workflow: ${{ github.event.workflow_run.workflow_id }}

    - name: Get commit SHA from auto-merge-commit artifact (if required)
      id: get_commit
      if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
      run: echo "auto_merge_commit_sha=$(cat auto_merge_commit.txt)" >> $GITHUB_OUTPUT

    - name: Record Commit SHA
      id: record_commit_sha
      run: echo "commit_sha=${{ steps.get_commit.outputs.auto_merge_commit_sha || github.sha }}" >> $GITHUB_OUTPUT  # Use SHA for upstream workflow run, normal SHA for push

    - name: Checkout code
      uses: actions/checkout@v4
      continue-on-error: false
      with:
        ref: ${{ steps.record_commit_sha.outputs.commit_sha }}
        fetch-depth: 0

    - name: Set up Go
      continue-on-error: false
      uses: actions/setup-go@v5
      with:
        go-version: 1.24
        cache: true
        cache-dependency-path: '**/go.sum'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
        key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-

    - name: Test
      if: contains(github.event.head_commit.modified, '${{ matrix.module }}')
      continue-on-error: false
      run: |
        echo "$(go version)"
        go test -v -cover ./...
      working-directory: ${{ matrix.module }}

    - name: Set up QEMU
      if: contains(github.event.head_commit.modified, '${{ matrix.module }}')
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      if: contains(github.event.head_commit.modified, '${{ matrix.module }}')
      continue-on-error: false
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug

    - name: Login to DockerHub
      if: contains(github.event.head_commit.modified, '${{ matrix.module }}')
      continue-on-error: false
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image for git sha
      if: contains(github.event.head_commit.modified, '${{ matrix.module }}')
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.module }}
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/modular-monolith:${{ matrix.module }}-${{ steps.record_commit_sha.outputs.commit_sha }}

    - name: Extract version
      if: contains(github.event.head_commit.modified, '${{ matrix.module }}/version.go')
      id: extract-version
      run: |
        VERSION=`grep -E "MAJOR|MINOR|PATCH" version.go | cut -d '"' -f 2 | xargs echo -n | tr -s " " "."`
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      working-directory: ${{ matrix.module }}

    - name: Check for version change and build & push version-specific Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.module }}
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/modular-monolith:${{ matrix.module }}-${{ steps.extract-version.outputs.VERSION }}
      if: contains(github.event.head_commit.modified, '${{ matrix.module }}/version.go')
