name: Test Building Go Binary

on:
  workflow_run:
    workflows:
      - "Auto-Merge main to special branches"
    types:
      - completed
  pull_request:

jobs:
  test-building:
    strategy:
      matrix:
        service:
          - products
          - payments

    runs-on: ubuntu-latest
    steps:

    - name: Download auto-merge-commit artifact (if required)
      uses: dawidd6/action-download-artifact@v2
      if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
      with:
        name: auto-merge-commit
        run_id: ${{ github.event.workflow_run.id }}
        workflow: ${{ github.event.workflow_run.workflow_id }}

    - name: Get commit SHA from auto-merge-commit artifact (if required)
      id: get_commit
      if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
      run: echo "auto_merge_commit_sha=$(cat auto_merge_commit.txt)" >> $GITHUB_OUTPUT

    - name: Record Commit SHA
      id: record_commit_sha
      run: echo "commit_sha=${{ steps.get_commit.outputs.auto_merge_commit_sha || github.sha }}" >> $GITHUB_OUTPUT  # Use SHA for upstream workflow run, normal SHA for push

    - name: Checkout code
      uses: actions/checkout@v4
      continue-on-error: false
      with:
        ref: ${{ steps.record_commit_sha.outputs.commit_sha }}
        fetch-depth: 0

    - name: Set up Go
      continue-on-error: false
      uses: actions/setup-go@v5
      with:
        go-version: 1.25
        cache: true
        cache-dependency-path: '**/go.sum'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
        key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-

    - name: Build ${{ matrix.service }}
      run: |
        go build -ldflags="-s -w" -a -o server $PWD/${{ matrix.service }}/cmd/server
    # - name: Test
    #   run: go test -v ./...
    # - name: Lint
    #   uses: golangci/golangci-lint-action@v3
    # - name: Format check
    #   run: test -z $(gofmt -l .)
    # - name: Static check
    #   run: |
    #     go install honnef.co/go/tools/cmd/staticcheck@latest
    #     staticcheck ./...
