name: Test Building Go Binary

on:
  workflow_run:
    workflows:
      - "Auto-Merge main to special branches"
    types:
      - completed
  pull_request:

jobs:
  test-building:
    strategy:
      matrix:
        service:
          - products
          - payments

    runs-on: ubuntu-latest
    steps:
    - name: Determine Commit SHA
      id: get_commit
      run: |
        if [ "${{ github.event_name }}" == "workflow_run" && "${{ github.event.workflow_run.conclusion }}" == 'success' ]; then
          echo "Triggered by workflow_run"
          echo "COMMIT_SHA=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/jobs \
            | jq -r '.jobs[].steps[] | select(.name=="Merge and Push changes") | .completed_at' | tail -n1)" >> $GITHUB_ENV
        else
          echo "Triggered by push"
          echo "COMMIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
        fi
      env:
        GH_TOKEN: ${{ github.token }}
    - name: Checkout code
      uses: actions/checkout@v4
      continue-on-error: false
      with:
        fetch-depth: 0

    - name: Set up Go
      continue-on-error: false
      uses: actions/setup-go@v5
      with:
        go-version: 1.24
        cache: true
        cache-dependency-path: '**/go.sum'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
        key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-

    - name: Build ${{ matrix.service }}
      run: |
        go build -ldflags="-s -w" -a -o server $PWD/${{ matrix.service }}/cmd/server
    # - name: Test
    #   run: go test -v ./...
    # - name: Lint
    #   uses: golangci/golangci-lint-action@v3
    # - name: Format check
    #   run: test -z $(gofmt -l .)
    # - name: Static check
    #   run: |
    #     go install honnef.co/go/tools/cmd/staticcheck@latest
    #     staticcheck ./...
