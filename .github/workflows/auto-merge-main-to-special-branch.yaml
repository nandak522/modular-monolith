name: Auto-Merge main to special branches

on:
  push:
    branches:
      - main

jobs:
  merge-main-to-special-branch:
    strategy:
      matrix:
        release_branch:
          - restricted
            # Add more special branches as needed

      fail-fast: false

    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
      - name: Checkout source branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.AUTO_MERGE_TOKEN }}
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Check if target branch exists
        id: check_branch
        run: |
          if git ls-remote --heads origin ${{ matrix.release_branch }} | grep -q 'refs/heads/${{ matrix.release_branch }}'; then
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "branch_exists=false" >> $GITHUB_OUTPUT
            echo "Release branch ${{ matrix.release_branch }} does not exist. Skipping."
            exit 0
          fi

      - name: Checkout target branch
        if: steps.check_branch.outputs.branch_exists == 'true'
        run: |
          git fetch origin ${{ matrix.release_branch }}
          git checkout -b ${{ matrix.release_branch }} origin/${{ matrix.release_branch }}

      - name: Configure git
        if: steps.check_branch.outputs.branch_exists == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Merge incoming changes
        id: merge
        if: steps.check_branch.outputs.branch_exists == 'true'
        run: |
          if git merge --no-commit --no-ff --allow-unrelated-histories origin/main; then
            echo "merge_status=success" >> $GITHUB_OUTPUT
            echo "::notice title=Merge Status::Merge main into ${{ matrix.release_branch }} is possible. No conflicts detected."
            git merge --abort  # Clean up the working directory
          else
            echo "merge_status=conflict" >> $GITHUB_OUTPUT
            echo "::warning title=Merge Conflict::Merge conflict detected in ${{ matrix.release_branch }}. Manual intervention required."
            git merge --abort  # Clean up the working directory
          fi

      - name: Push changes
        if: steps.check_branch.outputs.branch_exists == 'true' && steps.merge.outputs.merge_status == 'success'
        env:
          GH_TOKEN: ${{ secrets.AUTO_MERGE_TOKEN }}
        run: |
          git branch -a
          git merge --no-ff --allow-unrelated-histories origin/main
          git push -u origin ${{ matrix.release_branch }}

      - name: Report merge status
        if: always()
        run: |
          if [[ "${{ steps.check_branch.outputs.branch_exists }}" == "false" ]]; then
            echo "::notice title=Branch Status::Branch ${{ matrix.release_branch }} does not exist."
            echo "Branch ${{ matrix.release_branch }} does not exist." >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ steps.merge.outputs.merge_status }}" == "conflict" ]]; then
            echo "::error title=Merge Failed::Merge conflict detected in ${{ matrix.release_branch }}. Manual intervention required."
            echo "Merge conflict detected in ${{ matrix.release_branch }}. Manual intervention required." >> $GITHUB_STEP_SUMMARY
            exit 1
          elif [[ "${{ steps.merge.outputs.merge_status }}" == "success" ]]; then
            echo "::notice title=Merge Successful::Successfully merged main into ${{ matrix.release_branch }}."
            echo "Successfully merged main into ${{ matrix.release_branch }}." >> $GITHUB_STEP_SUMMARY
          else
            echo "::error title=Unexpected Status::Unexpected status for ${{ matrix.release_branch }}."
            echo "Unexpected status for ${{ matrix.release_branch }}." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

  check-overall-status:
    needs: merge-main-to-special-branch
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check if any merges failed
        run: |
          if [[ "${{ contains(needs.merge-main-to-special-branch.result, 'failure') }}" == "true" ]]; then
            echo "::error title=Merge Failures::One or more merges failed. Please check the individual job results."
            echo "One or more merges failed. Please check the individual job results." >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "::notice title=All Merges Successful::All merges completed successfully."
            echo "All merges completed successfully." >> $GITHUB_STEP_SUMMARY
          fi
